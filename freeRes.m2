restart
installPackage "OIModules"

R = ZZ/101
A = oiAlgebra R

-* Let M be the quotient of F0, a free OI-module generated in width 2
by its submodule K0, which is generated by everything in width 3. We
start the free resolution by hand: F1 is the free module that will
surject onto K0 *-
F0 = A^{2}
F1 = A^{3,3,3}

-* List of the natural basis vectors for F0 in width 3: *-
targets = (i -> matrix (gens F0 3)_i) \ {0,1,2}

-* the first map of the resolution: *-
phi1 = oiModuleMap(F0,F1,targets)

-* This gives the kernel of phi1 as a submodule of F1 (1.8 seconds) *-
time K1 = ker phi1

-* it has 6 generators, all width 4. So we make a map from a the
   appropriate free OI-module onto the generators. *-
F2 = A^{4,4,4,4,4,4}
phi2 = oiModuleMap(F1,F2, gens K1)

-* Continue as above. Find the kernel of phi 2 as a submodule of F2,
expecting 10 width 5 generators.  (98.4 seconds) *-
time K2 = ker phi2

-* To keep going, we'd do the same as above. Write the surjection onto
the kernel: *-
F3 = A^{5,5,5,5,5,5,5,5,5,5} phi3 = oiModuleMap(F2,F3,
gens K2)

-* and find its kernel. Heuristically, I expect this to take 10000
seconds = 2.7 hrs at a minimum, but I killed it after 10 minutes. *-

-- time K3 = ker phi3
